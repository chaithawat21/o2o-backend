// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model user {
  id                Int       @id @default(autoincrement())
  firstname         String?   @db.VarChar(255)
  lastname          String?   @db.VarChar(255)
  username          String?   @unique @db.VarChar(255)
  password          String?   @db.Text
  email             String?   @unique @db.VarChar(255)
  date_birth        DateTime?
  address           String?   @db.VarChar(255)
  phone_number      String?   @unique
  ImgUrl            String?   @map("Img_url")
  loan              loan[]
  lend              lend[]
  history           history[]
  verificationToken String?   @db.VarChar(255)
  verified          status    @default(false)
  
}

model lend {
  id         Int      @id @default(autoincrement())
  user       user     @relation(fields: [user_id], references: [id])
  user_id    Int
  history    history? @relation(fields: [history_id], references: [id])
  history_id Int?
  status     status?  @default(false)
  loan       loan     @relation(fields: [loan_id], references: [id])
  loan_id    Int
  amount     Int?
}

enum status {
  true
  false
}

model history {
  id      Int       @id @default(autoincrement())
  user    user      @relation(fields: [user_id], references: [id])
  user_id Int
  date    DateTime? @db.Timestamp()
  lend    lend[]
}

model loan {
  id                 Int        @id @default(autoincrement())
  borrower           user       @relation(fields: [borrower_id], references: [id])
  borrower_id        Int
  categories         categories @relation(fields: [categorie_id], references: [id])
  categorie_id       Int
  created_date       DateTime?
  purpose            String?
  story              String?
  total_amount       Int?
  repayment_schedule DateTime?  @db.Date
  businessAddress    provinces  @relation(fields: [business_address], references: [id])
  business_address   Int
  lend              lend[]
}

model categories {
  id             Int    @id @default(autoincrement())
  categorie_name String
  loan           loan[]
}

model contact {
  id      Int    @id @default(autoincrement())
  name    String
  email   String
  message String

  createdAt DateTime @default(now())
}

model regions {
  id          Int         @id @default(autoincrement())
  region_name String
  provinces   provinces[]
}

model provinces {
  id            Int     @id @default(autoincrement())
  loan          loan[]
  regions       regions @relation(fields: [region_id], references: [id])
  region_id     Int
  province_name String
}
