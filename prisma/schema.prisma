// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model user {
  id           Int     @id @default(autoincrement())
  firstname    String? @db.VarChar(255)
  lastname     String? @db.VarChar(255)
  username     String? @db.VarChar(255)
  password     String? @db.Text
  email        String? @unique @db.VarChar(255)
  date_birth   String?
  address      String? @db.VarChar(255)
  phone_number String? @unique
  loan         loan[]
  cart         cart[]
}

model loan {
  id                 Int       @id @default(autoincrement())
  borrower           user      @relation(fields: [borrower_id], references: [id])
  borrower_id        Int
  created_date       String?
  purpose            String?
  story              String?
  total_amount       Int?
  repayment_schedule DateTime? @db.Date
  categorie          String?   @db.VarChar(255) 
  business_address   String?          
  lend               lend[]
}

model cart {
  id        Int       @id @default(autoincrement())
  date      String?  
  lender    user      @relation(fields: [lender_id], references: [id])
  lender_id Int
  lend      lend[]
}

model lend {
  id      Int     @id @default(autoincrement())
  cart    cart    @relation(fields: [cart_id], references: [id])
  cart_id Int
  status  status? @default(flase)
  loan    loan    @relation(fields: [loan_id], references: [id])
  loan_id Int
  amount  Int?
}

enum status {
  true
  flase
}

model contact {
  id      Int     @id @default(autoincrement())
  name    String
  email   String 
  message String
  createdAt DateTime @default(now())
}